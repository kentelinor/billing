version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"  # RabbitMQ messaging port
      - "15672:15672"  # RabbitMQ management UI port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck: # Declare RabbitMQ healthy only when it answers 'ping'
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build:
      context: ./server
    container_name: flask_server
    ports:
      - "5000:5000"  # Flask server port
    depends_on:
      rabbitmq:  # Ensure RabbitMQ starts before the server
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - S3_QUEUE_NAME=s3_queue
      - VM_HANDLER_QUEUE_NAME=vm_handler_queue
    healthcheck:
      test: ["CMD", "curl", "http://localhost:5000/healthcheck"]
      interval: 10s
      timeout: 2s
      retries: 5

  client:
    build:
      context: ./client
    container_name: flask_client
    environment:
      - FLASK_SERVER_URL=http://server:5000
    depends_on:
      server:  # Ensure the server is running before the client
        condition: service_healthy  # Wait for the server to be healthy

  s3_consumer:
    build:
      context: ./s3_consumer
    container_name: rabbitmq_s3_consumer
    ports:
      - "4000:4000"  # Expose Flask server running on port 4000
    environment:
      - RABBITMQ_HOST=rabbitmq
      - QUEUE_NAME=s3_queue
      - AWS_S3_BUCKET_NAME=elinor
      - AWS_REGION=eu-north-1
      - SYSTEM_ENDPOINT_URL=http://system-endpoint-url
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    depends_on:
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "http://localhost:4000/health"]
      interval: 10s
      timeout: 2s
      retries: 5

  react-app:
    build:
      context: ./react_app  # Path to your React app directory
    container_name: react_app
    ports:
      - "3000:3000"  # React app port
    volumes:
      - ./react_app:/app  # Mount React app source code for live development
    stdin_open: true
    tty: true
    command: ["npm", "start"]


  vm_handler:
    build:
      context: ./vm_handler  # Path to your React app directory
    container_name: vm_handler
    ports:
      - "6000:6000"  # React app port
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file:
    - .env 
    

